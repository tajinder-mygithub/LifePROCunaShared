using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ExlCSR.BusinessLayer.Proxy
{
    class GetPolicyServiceRefrence302
    {
        //------------------------------------------------------------------------------
        // <auto-generated>
        //     This code was generated by a tool.
        //     Runtime Version:4.0.30319.18444
        //
        //     Changes to this file may cause incorrect behavior and will be lost if
        //     the code is regenerated.
        // </auto-generated>
        //------------------------------------------------------------------------------



        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
        [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IExlLifePROService")]
        public interface IExlLifePROService
        {

            [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IExlLifePROService/EXLServiceRequest", ReplyAction = "http://tempuri.org/IExlLifePROService/EXLServiceRequestResponse")]
            string EXLServiceRequest(string stRequest);

            [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IExlLifePROService/EXLServiceRequest", ReplyAction = "http://tempuri.org/IExlLifePROService/EXLServiceRequestResponse")]
            System.Threading.Tasks.Task<string> EXLServiceRequestAsync(string stRequest);
        }

        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
        public interface IExlLifePROServiceChannel : IExlLifePROService, System.ServiceModel.IClientChannel
        {
        }

        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
        public partial class ExlLifePROServiceClient : System.ServiceModel.ClientBase<IExlLifePROService>, IExlLifePROService
        {

            public ExlLifePROServiceClient()
            {
            }

            public ExlLifePROServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
            {
            }

            public ExlLifePROServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
            {
            }

            public ExlLifePROServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
            {
            }

            public ExlLifePROServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
            {
            }

            public string EXLServiceRequest(string stRequest)
            {
                return base.Channel.EXLServiceRequest(stRequest);
            }

            public System.Threading.Tasks.Task<string> EXLServiceRequestAsync(string stRequest)
            {
                return base.Channel.EXLServiceRequestAsync(stRequest);
            }
        }

        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
        [System.ServiceModel.ServiceContractAttribute(Namespace = "http://ACORD.org/Standards/Life/2/", ConfigurationName = "IExlLifePRORESTService")]
        public interface IExlLifePRORESTService
        {

            [System.ServiceModel.OperationContractAttribute(Action = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/ExlLifePRORESTRequest", ReplyAction = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/ExlLifePRORESTRequestRes" +
                "ponse")]
            string ExlLifePRORESTRequest(string strRequest);

            [System.ServiceModel.OperationContractAttribute(Action = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/ExlLifePRORESTRequest", ReplyAction = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/ExlLifePRORESTRequestRes" +
                "ponse")]
            System.Threading.Tasks.Task<string> ExlLifePRORESTRequestAsync(string strRequest);

            [System.ServiceModel.OperationContractAttribute(Action = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/GetDataPost", ReplyAction = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/GetDataPostResponse")]
            string GetDataPost(string id);

            [System.ServiceModel.OperationContractAttribute(Action = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/GetDataPost", ReplyAction = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/GetDataPostResponse")]
            System.Threading.Tasks.Task<string> GetDataPostAsync(string id);

            [System.ServiceModel.OperationContractAttribute(Action = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/GetData", ReplyAction = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/GetDataResponse")]
            string GetData(string value);

            [System.ServiceModel.OperationContractAttribute(Action = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/GetData", ReplyAction = "http://ACORD.org/Standards/Life/2/IExlLifePRORESTService/GetDataResponse")]
            System.Threading.Tasks.Task<string> GetDataAsync(string value);
        }

        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
        public interface IExlLifePRORESTServiceChannel : IExlLifePRORESTService, System.ServiceModel.IClientChannel
        {
        }

        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
        public partial class ExlLifePRORESTServiceClient : System.ServiceModel.ClientBase<IExlLifePRORESTService>, IExlLifePRORESTService
        {

            public ExlLifePRORESTServiceClient()
            {
            }

            public ExlLifePRORESTServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
            {
            }

            public ExlLifePRORESTServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
            {
            }

            public ExlLifePRORESTServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
            {
            }

            public ExlLifePRORESTServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
            {
            }

            public string ExlLifePRORESTRequest(string strRequest)
            {
                return base.Channel.ExlLifePRORESTRequest(strRequest);
            }

            public System.Threading.Tasks.Task<string> ExlLifePRORESTRequestAsync(string strRequest)
            {
                return base.Channel.ExlLifePRORESTRequestAsync(strRequest);
            }

            public string GetDataPost(string id)
            {
                return base.Channel.GetDataPost(id);
            }

            public System.Threading.Tasks.Task<string> GetDataPostAsync(string id)
            {
                return base.Channel.GetDataPostAsync(id);
            }

            public string GetData(string value)
            {
                return base.Channel.GetData(value);
            }

            public System.Threading.Tasks.Task<string> GetDataAsync(string value)
            {
                return base.Channel.GetDataAsync(value);
            }
        }

    }
}
